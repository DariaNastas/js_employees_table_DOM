{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,SAAS,gBAAgB,CAAC,mBAAoB,WAiBnC,IAAA,EAAT,SAA2B,CAAM,CAAE,CAAW,CAAE,CAAS,EACvD,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAExC,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAGI,EAAQ,EAHN,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,SAAS,CAAC,WAAW,GACrD,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,SAAS,CAAC,WAAW,SAe3D,CAXI,AAAgB,IAAhB,GACF,EAAS,SAAS,GAClB,EAAS,SAAS,IACT,AAAgB,IAAhB,GACT,EAAS,WAAW,EAAM,OAAO,CAAC,IAAK,KACvC,EAAS,WAAW,EAAM,OAAO,CAAC,IAAK,OAEvC,EAAS,EACT,EAAS,GAGP,AAAc,QAAd,GACK,EAAS,EAAS,EAAI,EAAS,EAAS,GAAK,EAE7C,EAAS,EAAS,EAAI,EAAS,EAAS,GAAK,CAExD,GAEA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EAqFS,EAAT,SAA0B,CAAK,CAAE,CAAO,CAAE,CAAI,EAC5C,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,SAAS,CAAG,EACzB,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAI,WAA6B,MAAA,CAAnB,EAAM,eAAqB,MAAA,CAAR,GACvD,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,WAAW,WACT,EAAa,MAAM,EACrB,EAAG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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var sortTableByColumn = function sortTableByColumn(_table, columnIndex, direction) {\n        var rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\n        rows.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[columnIndex].innerText.toLowerCase();\n            var cellB = rowB.cells[columnIndex].innerText.toLowerCase();\n            var valueA, valueB;\n            if (columnIndex === 3) {\n                valueA = parseInt(cellA);\n                valueB = parseInt(cellB);\n            } else if (columnIndex === 4) {\n                valueA = parseFloat(cellA.replace(\"$\", \"\"));\n                valueB = parseFloat(cellB.replace(\"$\", \"\"));\n            } else {\n                valueA = cellA;\n                valueB = cellB;\n            }\n            if (direction === \"asc\") return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\n            else return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;\n        });\n        tbody.innerHTML = \"\";\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    };\n    var selectRow = function selectRow(inputTable) {\n        inputTable.addEventListener(\"click\", function(e) {\n            var selectedRow = e.target.parentElement.sectionRowIndex;\n            for(var i = 0; i < tbody.rows.length; i++)tbody.rows[i].removeAttribute(\"class\");\n            tbody.rows[selectedRow].setAttribute(\"class\", \"active\");\n        });\n    };\n    var showNotification = function showNotification(title, message, type) {\n        var notification = document.createElement(\"div\");\n        notification.className = type;\n        notification.dataset.qa = \"notification\";\n        notification.innerHTML = \"<strong>\".concat(title, \"</strong>: \").concat(message);\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            notification.remove();\n        }, 4000);\n    };\n    var table = document.querySelector(\"table\");\n    var tbody = table.querySelector(\"tbody\");\n    var headers = table.querySelectorAll(\"th\");\n    var sortDirection = {};\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            var currentDirection = sortDirection[index] || \"desc\";\n            var newDirection = currentDirection === \"asc\" ? \"desc\" : \"asc\";\n            sortDirection[index] = newDirection;\n            sortTableByColumn(table, index, newDirection);\n        });\n    });\n    selectRow(tbody);\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    form.innerHTML = '\\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n  <label>Office: <select name=\"office\" data-qa=\"office\">\\n    <option value=\"Tokyo\">Tokyo</option>\\n    <option value=\"Singapore\">Singapore</option>\\n    <option value=\"London\">London</option>\\n    <option value=\"New York\">New York</option>\\n    <option value=\"Edinburgh\">Edinburgh</option>\\n    <option value=\"San Francisco\">San Francisco</option>\\n  </select></label>\\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n  <button type=\"submit\">Save to table</button>\\n';\n    document.body.appendChild(form);\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var userName = form.name.value.trim();\n        var position = form.position.value.trim();\n        var office = form.office.value.trim();\n        var age = parseInt(form.age.value, 10);\n        var salary = parseFloat(form.salary.value);\n        if (userName.length < 4) {\n            showNotification(\"Error\", \"Name must be at least 4 characters long\", \"error\");\n            return;\n        }\n        if (isNaN(age) || age < 18 || age > 90) {\n            showNotification(\"Error\", \"Age must be between 18 and 90\", \"error\");\n            return;\n        }\n        if (!position || position.length < 3) {\n            showNotification(\"Error\", \"Invalid position input!\", \"error\");\n            return;\n        }\n        var newRow = tbody.insertRow(tbody.rows.length - 1);\n        newRow.classList.add(\"data-row\");\n        newRow.insertCell().textContent = userName;\n        newRow.insertCell().textContent = position;\n        newRow.insertCell().textContent = office;\n        newRow.insertCell().textContent = age;\n        newRow.insertCell().textContent = \"$\".concat(Number(salary).toLocaleString(\"en-US\"));\n        showNotification(\"Success\", \"New employee is successfully added to the table!\", \"success\");\n        form.reset();\n    });\n    tbody.addEventListener(\"dblclick\", function(e) {\n        var cell = e.target.closest(\"td\");\n        if (!cell) return;\n        var initialText = cell.textContent;\n        var input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.classList.add(\"cell-input\");\n        input.value = initialText;\n        cell.textContent = \"\";\n        cell.appendChild(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            var newText = input.value.trim() || initialText;\n            cell.textContent = newText;\n        });\n        input.addEventListener(\"keypress\", function(symbol) {\n            if (symbol.key === \"Enter\") {\n                var newText = input.value.trim() || initialText;\n                cell.textContent = newText;\n            }\n        });\n    });\n    tbody.addEventListener(\"dblclick\", function(e) {\n        var cell = e.target.closest(\"td\");\n        if (!cell || cell.querySelector(\"input\")) return;\n        var initialText = cell.textContent;\n        var input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.classList.add(\"cell-input\");\n        input.value = initialText;\n        cell.textContent = \"\";\n        cell.appendChild(input);\n        input.focus();\n        var saveChanges = function() {\n            var newText = input.value.trim();\n            if (cell.cellIndex === 4) {\n                var parsedValue = parseFloat(newText.replace(/[$,]/g, \"\"));\n                newText = isNaN(parsedValue) ? initialText : \"$\".concat(parsedValue.toLocaleString(\"en-US\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                }));\n            } else if (newText === \"\") newText = initialText;\n            cell.textContent = newText;\n        };\n        input.addEventListener(\"blur\", saveChanges);\n        input.addEventListener(\"keypress\", function(symbol) {\n            if (symbol.key === \"Enter\") saveChanges();\n        });\n    });\n});\n\n//# sourceMappingURL=index.0956abb7.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  const tbody = table.querySelector('tbody');\n  const headers = table.querySelectorAll('th');\n  const sortDirection = {};\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      const currentDirection = sortDirection[index] || 'desc';\n      const newDirection = currentDirection === 'asc' ? 'desc' : 'asc';\n\n      sortDirection[index] = newDirection;\n\n      sortTableByColumn(table, index, newDirection);\n    });\n  });\n\n  function sortTableByColumn(_table, columnIndex, direction) {\n    const rows = [...tbody.querySelectorAll('tr')];\n\n    rows.sort((rowA, rowB) => {\n      const cellA = rowA.cells[columnIndex].innerText.toLowerCase();\n      const cellB = rowB.cells[columnIndex].innerText.toLowerCase();\n\n      let valueA, valueB;\n\n      if (columnIndex === 3) {\n        valueA = parseInt(cellA);\n        valueB = parseInt(cellB);\n      } else if (columnIndex === 4) {\n        valueA = parseFloat(cellA.replace('$', ''));\n        valueB = parseFloat(cellB.replace('$', ''));\n      } else {\n        valueA = cellA;\n        valueB = cellB;\n      }\n\n      if (direction === 'asc') {\n        return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;\n      } else {\n        return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;\n      }\n    });\n\n    tbody.innerHTML = '';\n    rows.forEach((row) => tbody.appendChild(row));\n  }\n\n  selectRow(tbody);\n\n  function selectRow(inputTable) {\n    inputTable.addEventListener('click', (e) => {\n      const selectedRow = e.target.parentElement.sectionRowIndex;\n\n      for (let i = 0; i < tbody.rows.length; i++) {\n        tbody.rows[i].removeAttribute('class');\n      }\n      tbody.rows[selectedRow].setAttribute('class', 'active');\n    });\n  }\n\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  form.innerHTML = `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n  <label>Office: <select name=\"office\" data-qa=\"office\">\n    <option value=\"Tokyo\">Tokyo</option>\n    <option value=\"Singapore\">Singapore</option>\n    <option value=\"London\">London</option>\n    <option value=\"New York\">New York</option>\n    <option value=\"Edinburgh\">Edinburgh</option>\n    <option value=\"San Francisco\">San Francisco</option>\n  </select></label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n  <button type=\"submit\">Save to table</button>\n`;\n  document.body.appendChild(form);\n\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const userName = form.name.value.trim();\n    const position = form.position.value.trim();\n    const office = form.office.value.trim();\n    const age = parseInt(form.age.value, 10);\n    const salary = parseFloat(form.salary.value);\n\n    if (userName.length < 4) {\n      showNotification(\n        'Error',\n        'Name must be at least 4 characters long',\n        'error',\n      );\n\n      return;\n    }\n\n    if (isNaN(age) || age < 18 || age > 90) {\n      showNotification('Error', 'Age must be between 18 and 90', 'error');\n\n      return;\n    }\n\n    if (!position || position.length < 3) {\n      showNotification('Error', 'Invalid position input!', 'error');\n\n      return;\n    }\n\n    const newRow = tbody.insertRow(tbody.rows.length - 1);\n\n    newRow.classList.add('data-row');\n\n    newRow.insertCell().textContent = userName;\n    newRow.insertCell().textContent = position;\n    newRow.insertCell().textContent = office;\n    newRow.insertCell().textContent = age;\n    newRow.insertCell().textContent = `$${Number(salary).toLocaleString('en-US')}`;\n\n    showNotification(\n      'Success',\n      'New employee is successfully added to the table!',\n      'success',\n    );\n    form.reset();\n  });\n\n  function showNotification(title, message, type) {\n    const notification = document.createElement('div');\n\n    notification.className = type;\n    notification.dataset.qa = 'notification';\n    notification.innerHTML = `<strong>${title}</strong>: ${message}`;\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.remove();\n    }, 4000);\n  }\n\n  tbody.addEventListener('dblclick', (e) => {\n    const cell = e.target.closest('td');\n\n    if (!cell) {\n      return;\n    }\n\n    const initialText = cell.textContent;\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.classList.add('cell-input');\n    input.value = initialText;\n    cell.textContent = '';\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      const newText = input.value.trim() || initialText;\n\n      cell.textContent = newText;\n    });\n\n    input.addEventListener('keypress', (symbol) => {\n      if (symbol.key === 'Enter') {\n        const newText = input.value.trim() || initialText;\n\n        cell.textContent = newText;\n      }\n    });\n  });\n\n  tbody.addEventListener('dblclick', (e) => {\n    const cell = e.target.closest('td');\n\n    if (!cell || cell.querySelector('input')) {\n      return;\n    }\n\n    const initialText = cell.textContent;\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.classList.add('cell-input');\n    input.value = initialText;\n    cell.textContent = '';\n    cell.appendChild(input);\n    input.focus();\n\n    const saveChanges = () => {\n      let newText = input.value.trim();\n\n      if (cell.cellIndex === 4) {\n        const parsedValue = parseFloat(newText.replace(/[$,]/g, ''));\n\n        newText = isNaN(parsedValue)\n          ? initialText\n          : `$${parsedValue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n      } else if (newText === '') {\n        newText = initialText;\n      }\n\n      cell.textContent = newText;\n    };\n\n    input.addEventListener('blur', saveChanges);\n\n    input.addEventListener('keypress', (symbol) => {\n      if (symbol.key === 'Enter') {\n        saveChanges();\n      }\n    });\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","document","addEventListener","sortTableByColumn","_table","columnIndex","direction","rows","_array_without_holes","isArray","tbody","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","rowA","rowB","valueA","valueB","cellA","cells","innerText","toLowerCase","cellB","parseInt","parseFloat","replace","innerHTML","forEach","row","appendChild","showNotification","title","message","type","notification","createElement","className","dataset","qa","concat","body","setTimeout","remove","table","querySelector","headers","sortDirection","header","index","newDirection","currentDirection","selectRow","inputTable","e","selectedRow","target","parentElement","sectionRowIndex","removeAttribute","setAttribute","form","classList","add","preventDefault","userName","value","trim","position","office","age","salary","isNaN","newRow","insertRow","insertCell","textContent","Number","toLocaleString","reset","cell","closest","initialText","input","focus","newText","symbol","key","saveChanges","cellIndex","parsedValue","minimumFractionDigits","maximumFractionDigits"],"version":3,"file":"index.0956abb7.js.map"}